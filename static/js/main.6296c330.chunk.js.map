{"version":3,"sources":["shared/Home/index.js","shared/Task/index.js","AnimatedHOC/hooks/useVisibilitySensor.js","AnimatedHOC/Animated/index.js","AnimatedHOC/index.js","AnimatedHOC/WithAnimation/index.js","App.js","index.js"],"names":["Home","to","Task","title","description","Solution","defaultProps","useVisibilitySensor","ref","options","useState","isIntersecting","setIntersecting","useEffect","currentRef","current","observer","IntersectionObserver","entry","observe","unobserve","Animated","children","rootRef","useRef","intersection","div","motion","initial","y","opacity","animate","exit","transition","duration","delay","SomeComponentWithAnimation","Component","propsToPass","props","obeserverCallback","setState","state","React","createRef","this","WithAnimation","className","index","style","height","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6296c330.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Home() {\n  return (\n      <div>\n        <h1>Localhost Academy Tasks:</h1>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/animatedHOC\">Animated HOC</Link>\n            </li>\n          </ul>\n        </nav>\n      </div>\n  );\n}\n\nexport default Home;","import React from \"react\";\n\nfunction Task({ title, description, Solution }) {\n  return (\n    <div>\n      <h1>{title}</h1>\n      <p>{description}</p>\n      {Solution}\n    </div>\n  );\n}\n\nTask.defaultProps = {\n  title: \"Default Title\",\n  description: \"Default Description\"\n}\n\nexport default Task;","import { useEffect, useState } from \"react\";\n\nfunction useVisibilitySensor(ref, options = {}) {\n  const [isIntersecting, setIntersecting] = useState(false);\n\n  useEffect(() => {\n    const currentRef = ref.current;\n    const observer = new IntersectionObserver(([entry]) => {\n      setIntersecting(entry.isIntersecting);\n    }, options);\n\n    if (currentRef) observer.observe(currentRef);\n\n    return () => {\n      if (currentRef) observer.unobserve(currentRef);\n    };\n  }, [ref, options]);\n\n  return isIntersecting;\n}\n\nexport default useVisibilitySensor;","import React, { useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { motion, AnimatePresence } from \"framer-motion\";\n\nimport useVisibilitySensor from \"../hooks/useVisibilitySensor\";\n\nfunction Animated({ children, options }) {\n  const rootRef = useRef(null);\n  const isIntersecting = useVisibilitySensor(rootRef, options.intersection);\n\n  return (\n    <div ref={rootRef}>\n      <AnimatePresence>\n        {isIntersecting && (\n          <motion.div {...options.motion}>{children}</motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n}\n\nAnimated.defaultProps = {\n  options: {\n    motion: {\n      initial: { y: -30, opacity: 0 },\n      animate: { y: 0, opacity: 1 },\n      exit: { opacity: 0 },\n      transition: { duration: 0.3, delay: 0.5 },\n    },\n    intersection: {}\n  },\n};\n\nAnimated.propTypes = {\n  children: PropTypes.node.isRequired,\n  options: PropTypes.shape({\n    motion: PropTypes.shape({\n      initial: PropTypes.object,\n      animate: PropTypes.object,\n      exit: PropTypes.object,\n      transition: PropTypes.object,\n    }),\n    intersection: PropTypes.shape({\n      rootMargin: PropTypes.string,\n      threshold: PropTypes.number,\n    }),\n  }),\n};\n\nexport default Animated;\n","import React from \"react\";\n\nimport \"./index.css\"\n\nimport Animated from \"./Animated\";\nimport WithAnimation from \"./WithAnimation\";\n\nfunction SomeComponent() {\n  return <div className=\"animatedElement\">I was created by WithAnimation Higher order component</div>;\n}\n\nconst SomeComponentWithAnimation = WithAnimation(SomeComponent);\n\nexport default function index() {\n  return (\n    <div style={{ height: \"200vh\" }}>\n      <div style={{ height: \"100vh\" }} />\n      <SomeComponentWithAnimation />\n      <Animated>\n        <div className=\"animatedElement\">I was wrapped in Animated component and render as children</div>\n      </Animated>\n    </div>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { motion, AnimatePresence } from \"framer-motion\";\n\nfunction WithAnimation(Component, propsToPass) {\n  return class extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        isIntersecting: false,\n      };\n      this.rootRef = React.createRef();\n      this.observer = new IntersectionObserver(\n        ([entry]) => this.obeserverCallback(entry),\n        this.props.options.intersection\n      );\n    }\n\n    static defaultProps = {\n      options: {\n        motion: {\n          initial: { y: -30, opacity: 0 },\n          animate: { y: 0, opacity: 1 },\n          exit: { opacity: 0 },\n          transition: { duration: 0.3, delay: 0.5 },\n        },\n        intersection: {},\n      },\n    };\n\n    static propTypes = {\n      options: PropTypes.shape({\n        motion: PropTypes.shape({\n          initial: PropTypes.object,\n          animate: PropTypes.object,\n          exit: PropTypes.object,\n          transition: PropTypes.object,\n        }),\n        intersection: PropTypes.shape({\n          rootMargin: PropTypes.string,\n          threshold: PropTypes.number,\n        }),\n      }),\n    };\n\n    obeserverCallback = (entry) => {\n      this.setState({ isIntersecting: entry.isIntersecting });\n    };\n\n    componentDidMount() {\n      if (this.rootRef.current) this.observer.observe(this.rootRef.current);\n    }\n\n    componentWillUnmount() {\n      if (this.rootRef.current) this.observer.unobserve(this.rootRef.current);\n    }\n\n    render() {\n      return (\n        <div ref={this.rootRef}>\n          <AnimatePresence>\n            {this.state.isIntersecting && (\n              <motion.div {...this.props.options.motion}>\n                <Component {...propsToPass} />\n              </motion.div>\n            )}\n          </AnimatePresence>\n        </div>\n      );\n    }\n  };\n}\n\nexport default WithAnimation;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport \"./index.css\"\n\nimport Home from \"./shared/Home\";\nimport Task from \"./shared/Task\";\nimport AnimatedHOC from \"./AnimatedHOC\";\n\nexport default function App() {\n  return (\n    <div className=\"container\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/animatedHOC\">\n            <Task\n              title=\"Animated HOC\"\n              description=\"Animated HOC. Componet created based on IntersectionObserver\"\n              Solution={<AnimatedHOC />}\n            />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}